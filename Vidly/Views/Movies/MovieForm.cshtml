@model Vidly.ViewModels.MovieFormViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*
        Deze oplossing had ik bedacht voor het tonen van een titel afhankelijk met betrekking new/edit.
        Later de oplossing zoals gegeven in de Github repo geïmplementeerd. Zie <h2> tag en MovieFormViewModel
        @if (Model.Movie != null)
        {
    <h2>Edit Movie</h2>
    }
        else
        {
            <h2>New Movie</h2>
        }
*@
<h2>@Model.Title</h2>

@using (Html.BeginForm("Save", "Movies"))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ReleaseDate)
        @Html.TextBoxFor(m => m.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ReleaseDate)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.GenreId)
        @Html.DropDownListFor(m => m.Id, new SelectList(Model.Genres, "Id", "Name"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.GenreId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NumberInStock)
        @Html.TextBoxFor(m => m.NumberInStock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NumberInStock)
    </div>

    @Html.HiddenFor(m => m.Id)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>

}

@section scripts
    {
    @Scripts.Render("~/bundles/jqueryval");
}